---
pipeline:
  docker-image-featurebranch:
    group: pre-integration-test
    image: docker.artifactory.adform.com/drone-plugins/docker
    repo: docker.artifactory.adform.com/ciam/adform-bloom-read
    tags:
      - "${DRONE_COMMIT_SHA:0:10}"
    when:
      event: push

  unit-tests:
    group: pre-integration-test
    image: docker.artifactory.adform.com/dotnet/sdk:6.0.101-bullseye-slim
    commands:
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Read.Unit.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
    when:
      event:
        exclude: deployment

  mark-images:
    image: docker.artifactory.adform.com/drone-plugins/image-marker
    pull: true
    secrets: [username, password]
    file_path: "ciam/adform-bloom-read/*"
    properties: "safe_to_delete=true"
    versions_to_keep: 15
    older_than: "1mo"
    dry_run: false
    when:
      event: push
      branch: master

  integration-test-host:
    image: docker.artifactory.adform.com/ciam/adform-bloom-read:${DRONE_COMMIT_SHA:0:10}
    detach: true
    ports: "9696:9696"
    environment:
      - ASPNETCORE_ENVIRONMENT=testenv
      - GRPC_PORT=9696
    when:
      event: push

  integration-test-run:
    group: qa
    image: docker.artifactory.adform.com/dotnet/sdk:6.0.101-bullseye-slim
    commands:
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Read.Integration.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
    when:
      event: push

  sonarQube-featurebranch:
    group: qa
    environment:
      - SONAR_URL=https://sonarqube.adform.com/
      - PLUGIN_REPORTS=./test/*/coverage.opencover.xml
      - PLUGIN_BUILD_PATH=./src/Adform.Bloom.Read.Grpc
      - PLUGIN_SONAR_GATE_SKIP=false
    commands:
      - sonarScan
    secrets: [ sonar_login ]
    image: docker.artifactory.adform.com/ciam/sonarqube-qualitygate-docker
    pull: true
    when: 
      branch:
        exclude: master
      event: 
        exclude: deployment

  sonarQube-master:
    group: qa
    environment:
      - SONAR_URL=https://sonarqube.adform.com/
      - PLUGIN_REPORTS=./test/*/coverage.opencover.xml
      - PLUGIN_BUILD_PATH=./src/Adform.Bloom.Read.Grpc
    commands:
      - sonarScan
    secrets: [ sonar_login ]
    image: docker.artifactory.adform.com/ciam/sonarqube-qualitygate-docker
    pull: true
    when: 
      branch: master
      event: 
        exclude: deployment

  docker-image-master:
    image: docker.artifactory.adform.com/drone-plugins/docker
    repo: docker.artifactory.adform.com/ciam/adform-bloom-read
    tags:
      - "${DRONE_COMMIT_SHA:0:10}"
      - "${DRONE_TAG##v}"
      - latest
    when:
      branch: master
      event: tag

  helm-deploy-dev-featurebranch:
    group: deploy_featurebranch
    image: docker.artifactory.adform.com/drone-plugins/helm
    chart: stable/base-simple
    chart_version: 1.3.*
    release: adform-bloom-read-${DRONE_COMMIT_BRANCH,,}
    namespace: adform-bloom
    deploy_environment: "d1"
    secrets: ["d1_kubernetes_token"]
    values_files: ["./helm/values.yaml", "./helm/values.d1.yaml"]
    string_values:
      [
        "image.tag=${DRONE_COMMIT_SHA:0:10}",
        "feature=${DRONE_COMMIT_BRANCH,,}",
        "replicaCount=1",
        "strategy.rollingUpdate.maxUnavailable=0%",
      ]
    when:
      branch:
        exclude: master
      event: push

  publish-bloom-read-events-featurebranch:
    image: docker.artifactory.adform.com/dotnet/sdk:6.0.101-bullseye-slim
    commands:
      - dotnet pack --configuration ${DOTNET_CONFIGURATION=Release} --output ./packages-to-deploy --version-suffix "fb" ./src/Adform.Bloom.Read.Contracts
    when:
      branch:
        exclude: master
      event: push

  release-bloom-read-events-featurebranch:
    image: docker.artifactory.adform.com/drone-plugins/publish-generic
    path: nuget-local/ciam/Adform.Bloom.Read.Contracts.FeatureBranch/
    secrets: [username, password]
    sources:
      - ./packages-to-deploy/*.nupkg
    when:
      branch:
        exclude: master
      event: push

  # clear-docker-image:
  #   image: docker.artifactory.adform.com/rip/buildenv-jvm:1.0.0-5-e773646 # image with curl, can be replaced
  #   secrets: [username, password]
  #   commands:
  #     - curl -k -u$${USERNAME}:$${PASSWORD} -X DELETE "https://artifactory.adform.com/artifactory/docker-local/ciam/adform-bloom-read/${DRONE_COMMIT_SHA:0:10}"
  #   when:
  #     event: push
  #     status: [success, failure]

  helm-deploy-master:
    image: docker.artifactory.adform.com/drone-plugins/helm
    chart: stable/base-simple
    chart_version: 1.3.*
    release: adform-bloom-read
    namespace: adform-bloom
    deploy_environment: "${DRONE_DEPLOY_TO,,}"
    secrets: ["${DRONE_DEPLOY_TO,,}_kubernetes_token"]
    values_files:
      ["./helm/values.yaml", "./helm/values.${DRONE_DEPLOY_TO,,}.yaml"]
    string_values: "image.tag=${DRONE_TAG##v}"
    timeout: 5m
    when:
      event: deployment
      environment: [d1, pp, pr]

  publish-bloom-read-events-master:
    image: docker.artifactory.adform.com/dotnet/sdk:6.0.101-bullseye-slim
    commands:
      - dotnet pack --configuration ${DOTNET_CONFIGURATION=Release} --output ./packages-to-deploy ./src/Adform.Bloom.Read.Contracts
    when:
      event: deployment
      environment: [d1, pp, pr]

  release-bloom-read-events-master:
    image: docker.artifactory.adform.com/drone-plugins/publish-generic
    path: nuget-local/ciam/Adform.Bloom.Read.Contracts/
    secrets: [username, password]
    sources:
      - ./packages-to-deploy/*.nupkg
    when:
      event: deployment
      environment: [d1, pp, pr]

services:
  npgsql:
    container_name: npgsql
    image: docker.artifactory.adform.com/ciam/postgresql:10-2
    ports:
      - '5432:5432'
    environment:
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=readmodel
    when:
      event: push
