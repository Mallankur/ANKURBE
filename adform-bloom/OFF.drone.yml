---
pipeline:
  docker-image-temporary:
    group: group1
    image: docker.artifactory.adform.com/drone-plugins/docker
    repo: docker.artifactory.adform.com/ciam/adform-bloom
    tags:
      - "${DRONE_COMMIT_SHA:0:10}"
    when:
      event: push

  unit-tests:
    group: group1
    image: docker.artifactory.adform.com/dotnet/sdk:5.0-buster-slim
    commands:
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Unit.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Architecture.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
    when:
      event:
        exclude: deployment

  mark-images:
    group: group1
    image: docker.artifactory.adform.com/drone-plugins/image-marker
    pull: true
    secrets: [username, password]
    file_path: "ciam/adform-bloom/*"
    properties: "safe_to_delete=true"
    versions_to_keep: 15
    older_than: "1mo"
    dry_run: false
    when:
      event: push
      branch: master

  integration-test-run:
    image: docker.artifactory.adform.com/dotnet/sdk:5.0-buster-slim
    commands:
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Integration.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
    when:
      event: push

  acceptance-test-host:
    image: docker.artifactory.adform.com/ciam/adform-bloom:${DRONE_COMMIT_SHA:0:10}
    detach: true
    ports: "80:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=testenv
    when:
      event: push

  acceptance-test-run:
    image: docker.artifactory.adform.com/dotnet/sdk:5.0-buster-slim
    commands:
      - dotnet test --configuration ${DOTNET_CONFIGURATION=Release} ./test/Adform.Bloom.Acceptance.Test /p:CollectCoverage=true /p:CoverletOutputFormat=\"opencover,lcov\"
    when:
      event: push
      
# Disable due SSL issues on sonarqube
#  sonarQube-featurebranch:
#    group: post-test
#    environment:
#      - SONAR_URL=https://sonarqube.adform.com/
#      - PLUGIN_REPORTS=./test/*/coverage.opencover.xml
#      - PLUGIN_BUILD_PATH=./src/Adform.Bloom.Api
#      - PLUGIN_SONAR_GATE_SKIP=false
#    commands:
#      - sonarScan
#    secrets: [sonar_login]
#    image: docker.artifactory.adform.com/ciam/sonarqube-qualitygate-docker
#    pull: true
#    when:
#      branch:
#        exclude: master
#      event:
#        exclude: [tag, deployment]
#
#  sonarQube-master:
#    group: post-test
#    environment:
#      - SONAR_URL=https://sonarqube.adform.com/
#      - PLUGIN_REPORTS=./test/*/coverage.opencover.xml
#      - PLUGIN_BUILD_PATH=./src/Adform.Bloom.Api
#    commands:
#      - sonarScan
#    secrets: [sonar_login]
#    image: docker.artifactory.adform.com/ciam/sonarqube-qualitygate-docker
#    pull: true
#    when:
#      branch: master
#      event:
#        exclude: [tag, deployment]

  docker-image-master:
    image: docker.artifactory.adform.com/drone-plugins/docker
    repo: docker.artifactory.adform.com/ciam/adform-bloom
    tags:
      - "${DRONE_COMMIT_SHA:0:10}"
      - "${DRONE_TAG##v}"
      - latest
    when:
      branch: master
      event: tag

  helm-deploy-dev-featurebranch:
    group: post-test
    image: docker.artifactory.adform.com/drone-plugins/helm
    chart: stable/base-simple
    chart_version: 1.3.*
    release: adform-bloom-${DRONE_COMMIT_BRANCH,,}
    namespace: adform-bloom
    deploy_environment: "d1"
    secrets: ["d1_kubernetes_token"]
    values_files: ["./helm/values.yaml", "./helm/values.d1.yaml"]
    string_values:
      [
        "image.tag=${DRONE_COMMIT_SHA:0:10}",
        "feature=${DRONE_COMMIT_BRANCH,,}",
        "replicaCount=1",
        "strategy.rollingUpdate.maxUnavailable=0%",
      ]
    when:
      branch:
        exclude: master
      event: push

  publish-bloom-messages-nuget-dev-featurebranch:
    image: docker.artifactory.adform.com/dotnet/sdk:5.0-buster-slim
    commands:
      - dotnet pack --configuration ${DOTNET_CONFIGURATION=Release} --output ./packages-to-deploy /p:Version=1.0.0.0-beta ./src/Adform.Bloom.Messages
    when:
      branch:
        exclude: master
      event: push

  release-bloom-messages-nuget-dev-featurebranch:
    image: docker.artifactory.adform.com/drone-plugins/publish-generic
    path: nuget-local/ciam/Adform.Bloom.Messages/
    secrets: [username, password]
    sources:
      - ./packages-to-deploy/*.nupkg
    when:
      branch:
        exclude: master
      event: push

  clear-docker-image:
    image: docker.artifactory.adform.com/rip/buildenv-jvm:1.0.0-5-e773646 # image with curl, can be replaced
    secrets: [username, password]
    commands:
      - curl -k -u $${USERNAME}:$${PASSWORD} -X DELETE "https://artifactory.adform.com/artifactory/docker-local/ciam/adform-bloom/${DRONE_COMMIT_SHA:0:10}"
    when:
      event: push
      status: [success, failure]

  publish-bloom-messages-master:
    image: docker.artifactory.adform.com/dotnet/sdk:5.0-buster-slim
    commands:
      - dotnet pack --configuration ${DOTNET_CONFIGURATION=Release} --output ./packages-to-deploy ./src/Adform.Bloom.Messages
    when:
      event: deployment
      environment: [d1, pp, pr]

  release-bloom-messages-master:
    image: docker.artifactory.adform.com/drone-plugins/publish-generic
    path: nuget-local/ciam/Adform.Bloom.Messages/
    secrets: [username, password]
    sources:
      - ./packages-to-deploy/*.nupkg
    when:
      event: deployment
      environment: [d1, pp, pr]

  helm-deploy-master:
    image: docker.artifactory.adform.com/drone-plugins/helm
    chart: stable/base-simple
    chart_version: 1.3.*
    release: adform-bloom
    namespace: adform-bloom
    deploy_environment: "${DRONE_DEPLOY_TO,,}"
    secrets: ["${DRONE_DEPLOY_TO,,}_kubernetes_token"]
    values_files:
      ["./helm/values.yaml", "./helm/values.${DRONE_DEPLOY_TO,,}.yaml"]
    string_values: "image.tag=${DRONE_TAG##v}"
    timeout: 5m
    when:
      event: deployment
      environment: [d1, pp, pr]

services:
  ongdb:
    image: docker.artifactory.adform.com/ciam/ongdb-apoc:latest
    container_name: ongdb
    environment:
      - NEO4J_AUTH=neo4j/password
    ports:
      - "7687:7687"
      - "7474:7474"
    when:
      event: push
  rabbitmq:
    image: docker.artifactory.adform.com/ciam/rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    when:
      event: push
  npgsql:
    container_name: npgsql
    image: docker.artifactory.adform.com/ciam/postgresql:10-2
    ports:
      - "5432:5432"
    environment:
      - DB_USER=root
      - DB_PASS=root
      - DB_NAME=readmodel
    when:
      event: push
  aerospike:
    image: aerospike/aerospike-server:4.8.0.5
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
      - "3003:3003"
    environment:
      - NAMESPACE=ciam
    when:
      event: push
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_CLIENT_PORT=2181
    when:
      event: push
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CREATE_TOPICS=ciam.bloom.master_account_assigments_notification:1:1,ciam_roles_assignments_changed_for_subject_event_dk:1:1
    depends_on:
      - zookeeper
    when:
      event: push
  bloom-runtime:
    image: docker.artifactory.adform.com/ciam/adform-bloom-runtime:latest
    ports:
      - 80
    environment:
      - ASPNETCORE_ENVIRONMENT=testenv
    when:
      event: push
      environment:
        exclude: [pp, pr]
  bloom-read:
    image: docker.artifactory.adform.com/ciam/adform-bloom-read:latest
    ports:
      - 9696
    environment:
      - ASPNETCORE_ENVIRONMENT=testenv
    when:
      event: push
      environment:
        exclude: [pp, pr]
